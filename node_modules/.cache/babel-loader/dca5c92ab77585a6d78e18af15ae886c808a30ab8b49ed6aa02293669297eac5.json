{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator.jsx\",\n  _s = $RefreshSig$();\nimport { animated, useSpring } from 'react-spring';\nimport '../styles/elevatorStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Elevator = _ref => {\n  _s();\n  let {\n    y,\n    style,\n    handleElevetorArrived,\n    color\n  } = _ref;\n  const spring = useSpring({\n    to: {\n      y\n    },\n    config: {\n      mass: 1,\n      tension: 180,\n      friction: 25,\n      velocity: 0\n    },\n    onRest: () => {\n      handleElevetorArrived();\n    }\n  });\n  const yDiff = Math.abs(y - spring.y.get());\n\n  // Determine the amount of tension and friction based on how close the elevator is to its target floor\n  let tension, friction;\n  if (yDiff <= 50) {\n    tension = 40 + yDiff;\n    friction = 25 + yDiff;\n  } else if (yDiff <= 200) {\n    tension = 160 + yDiff * 0.2;\n    friction = 20 + yDiff * 0.1;\n  } else {\n    tension = 400;\n    friction = 50;\n  }\n  spring.config.tension = tension;\n  spring.config.friction = friction;\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    className: \"elevator\",\n    style: {\n      ...style,\n      transform: spring.y.to(y => `translateY(${y}px)`)\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"elevator-image\",\n      src: `./icons8-elevator-${color}.svg`,\n      alt: \"Woops\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Elevator, \"xrfx8rkkJgEmgq4ddSaV8nbWakk=\", false, function () {\n  return [useSpring];\n});\n_c = Elevator;\nexport default Elevator;\nvar _c;\n$RefreshReg$(_c, \"Elevator\");","map":{"version":3,"names":["animated","useSpring","jsxDEV","_jsxDEV","Elevator","_ref","_s","y","style","handleElevetorArrived","color","spring","to","config","mass","tension","friction","velocity","onRest","yDiff","Math","abs","get","div","className","transform","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator.jsx"],"sourcesContent":["import { animated, useSpring } from 'react-spring';\nimport '../styles/elevatorStyles.css'\nconst Elevator = ({ y, style, handleElevetorArrived, color }) => {\n  const spring = useSpring({\n    to: { y },\n    config: {\n      mass: 1,\n      tension: 180,\n      friction: 25,\n      velocity: 0,\n    },\n    onRest: () => {\n      handleElevetorArrived();\n    },\n  });\n\n  const yDiff = Math.abs(y - spring.y.get());\n\n  // Determine the amount of tension and friction based on how close the elevator is to its target floor\n  let tension, friction;\n\n  if (yDiff <= 50) {\n    tension = 40 + yDiff;\n    friction = 25 + yDiff;\n  } else if (yDiff <= 200) {\n    tension = 160 + yDiff * 0.2;\n    friction = 20 + yDiff * 0.1;\n  } else {\n    tension = 400;\n    friction = 50;\n  }\n\n  spring.config.tension = tension;\n  spring.config.friction = friction;\n\n  return (\n    <animated.div\n      className=\"elevator\"\n      style={{\n        ...style,\n        transform: spring.y.to((y) => `translateY(${y}px)`),\n      }}\n    >\n      <img\n        className=\"elevator-image\"\n        src={`./icons8-elevator-${color}.svg`}\n        alt=\"Woops\"\n      />\n    </animated.div>\n  );\n};\nexport default Elevator"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,cAAc;AAClD,OAAO,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACrC,MAAMC,QAAQ,GAAGC,IAAA,IAAgD;EAAAC,EAAA;EAAA,IAA/C;IAAEC,CAAC;IAAEC,KAAK;IAAEC,qBAAqB;IAAEC;EAAM,CAAC,GAAAL,IAAA;EAC1D,MAAMM,MAAM,GAAGV,SAAS,CAAC;IACvBW,EAAE,EAAE;MAAEL;IAAE,CAAC;IACTM,MAAM,EAAE;MACNC,IAAI,EAAE,CAAC;MACPC,OAAO,EAAE,GAAG;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,MAAM,EAAEA,CAAA,KAAM;MACZT,qBAAqB,EAAE;IACzB;EACF,CAAC,CAAC;EAEF,MAAMU,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACd,CAAC,GAAGI,MAAM,CAACJ,CAAC,CAACe,GAAG,EAAE,CAAC;;EAE1C;EACA,IAAIP,OAAO,EAAEC,QAAQ;EAErB,IAAIG,KAAK,IAAI,EAAE,EAAE;IACfJ,OAAO,GAAG,EAAE,GAAGI,KAAK;IACpBH,QAAQ,GAAG,EAAE,GAAGG,KAAK;EACvB,CAAC,MAAM,IAAIA,KAAK,IAAI,GAAG,EAAE;IACvBJ,OAAO,GAAG,GAAG,GAAGI,KAAK,GAAG,GAAG;IAC3BH,QAAQ,GAAG,EAAE,GAAGG,KAAK,GAAG,GAAG;EAC7B,CAAC,MAAM;IACLJ,OAAO,GAAG,GAAG;IACbC,QAAQ,GAAG,EAAE;EACf;EAEAL,MAAM,CAACE,MAAM,CAACE,OAAO,GAAGA,OAAO;EAC/BJ,MAAM,CAACE,MAAM,CAACG,QAAQ,GAAGA,QAAQ;EAEjC,oBACEb,OAAA,CAACH,QAAQ,CAACuB,GAAG;IACXC,SAAS,EAAC,UAAU;IACpBhB,KAAK,EAAE;MACL,GAAGA,KAAK;MACRiB,SAAS,EAAEd,MAAM,CAACJ,CAAC,CAACK,EAAE,CAAEL,CAAC,IAAM,cAAaA,CAAE,KAAI;IACpD,CAAE;IAAAmB,QAAA,eAEFvB,OAAA;MACEqB,SAAS,EAAC,gBAAgB;MAC1BG,GAAG,EAAG,qBAAoBjB,KAAM,MAAM;MACtCkB,GAAG,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACW;AAEnB,CAAC;AAAC1B,EAAA,CAhDIF,QAAQ;EAAA,QACGH,SAAS;AAAA;AAAAgC,EAAA,GADpB7B,QAAQ;AAiDd,eAAeA,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}