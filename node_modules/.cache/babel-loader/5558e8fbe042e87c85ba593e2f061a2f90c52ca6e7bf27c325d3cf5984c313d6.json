{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/elevatorController.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { ELEVATOR_COLORS } from '../constants/constants';\nimport { useQueue } from './Queue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElevatorControllerContext = /*#__PURE__*/createContext();\nexport const useElevatorController = () => {\n  _s();\n  return useContext(ElevatorControllerContext);\n};\n_s(useElevatorController, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst ElevatorControllerProvider = _ref => {\n  _s2();\n  let {\n    children,\n    elevatorsNum\n  } = _ref;\n  const [elevatorsData, setElevatorsData] = useState([]);\n  const {\n    size\n  } = useQueue();\n  //choose the colsest elevator, if not exists return undifined\n  function chooseTheClosestElevator(toFloor) {\n    let availableElevators = elevatorsData.filter(elevator => !elevator.occupied);\n    if (availableElevators.length === 0) {\n      return undefined;\n    }\n    let closestElevator = availableElevators[0];\n    let closestDistance = Math.abs(availableElevators[0].currFloor - toFloor);\n    for (const object of availableElevators) {\n      const distance = Math.abs(object.currFloor - toFloor);\n      if (distance < closestDistance) {\n        closestDistance = distance;\n        closestElevator = object;\n      }\n    }\n    return closestElevator;\n  }\n\n  // init the elevators\n  function initElevatorDta(width) {\n    const elevators = [];\n    for (let i = 0; i < elevatorsNum; i++) {\n      elevators.push({\n        key: i,\n        y: 0,\n        style: {\n          width: `${width}px`,\n          left: `${i * width}px`\n        },\n        occupied: false,\n        currFloor: 0,\n        toFloor: -1,\n        color: ELEVATOR_COLORS.BLACK,\n        dist: 0\n      });\n    }\n    setElevatorsData(elevators);\n  }\n  const value = {\n    elevatorsData,\n    setElevatorsData,\n    initElevatorDta,\n    chooseTheClosestElevator\n  };\n  return /*#__PURE__*/_jsxDEV(ElevatorControllerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s2(ElevatorControllerProvider, \"eneWqj1SNK18jOkyJi8reu68soc=\", false, function () {\n  return [useQueue];\n});\n_c = ElevatorControllerProvider;\nexport default ElevatorControllerProvider;\nvar _c;\n$RefreshReg$(_c, \"ElevatorControllerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","ELEVATOR_COLORS","useQueue","jsxDEV","_jsxDEV","ElevatorControllerContext","useElevatorController","_s","ElevatorControllerProvider","_ref","_s2","children","elevatorsNum","elevatorsData","setElevatorsData","size","chooseTheClosestElevator","toFloor","availableElevators","filter","elevator","occupied","length","undefined","closestElevator","closestDistance","Math","abs","currFloor","object","distance","initElevatorDta","width","elevators","i","push","key","y","style","left","color","BLACK","dist","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/elevatorController.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { ELEVATOR_COLORS } from '../constants/constants';\nimport { useQueue } from './Queue';\nconst ElevatorControllerContext = createContext();\n\nexport const useElevatorController = () => {\n  return useContext(ElevatorControllerContext);\n};\n\nconst ElevatorControllerProvider = ({ children, elevatorsNum }) => {\n  const [elevatorsData, setElevatorsData] = useState([]);\n  const {size} = useQueue()\n  //choose the colsest elevator, if not exists return undifined\nfunction chooseTheClosestElevator(toFloor){\n  let availableElevators = elevatorsData.filter(elevator => !elevator.occupied)\n  if(availableElevators.length === 0){\n    return undefined;\n  }\n  let closestElevator = availableElevators[0];\n  let closestDistance = Math.abs(availableElevators[0].currFloor - toFloor);\n\n  for (const object of availableElevators) {\n    const distance = Math.abs(object.currFloor - toFloor);\n\n    if (distance < closestDistance) {\n      closestDistance = distance;\n      closestElevator = object;\n    }\n}\nreturn closestElevator\n}\n\n  \n  // init the elevators\n  function initElevatorDta(width) {\n    const elevators = [];\n    for (let i = 0; i < elevatorsNum; i++) {\n      elevators.push({\n        key: i,\n        y: 0,\n        style: {width: `${width}px`, left: `${i*(width)}px`},\n        occupied: false,\n        currFloor: 0,\n        toFloor: -1,\n        color: ELEVATOR_COLORS.BLACK,\n        dist: 0,\n      });\n    }\n    setElevatorsData(elevators);\n  }\n\n  const value = {elevatorsData, setElevatorsData, initElevatorDta, chooseTheClosestElevator};\n\n  return (\n    <ElevatorControllerContext.Provider value={value}>\n      {children}\n    </ElevatorControllerContext.Provider>\n  );\n};\n\nexport default ElevatorControllerProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,QAAQ,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnC,MAAMC,yBAAyB,gBAAGP,aAAa,EAAE;AAEjD,OAAO,MAAMQ,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,OAAOR,UAAU,CAACM,yBAAyB,CAAC;AAC9C,CAAC;AAACE,EAAA,CAFWD,qBAAqB;AAIlC,MAAME,0BAA0B,GAAGC,IAAA,IAAgC;EAAAC,GAAA;EAAA,IAA/B;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAC5D,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAACe;EAAI,CAAC,GAAGb,QAAQ,EAAE;EACzB;EACF,SAASc,wBAAwBA,CAACC,OAAO,EAAC;IACxC,IAAIC,kBAAkB,GAAGL,aAAa,CAACM,MAAM,CAACC,QAAQ,IAAI,CAACA,QAAQ,CAACC,QAAQ,CAAC;IAC7E,IAAGH,kBAAkB,CAACI,MAAM,KAAK,CAAC,EAAC;MACjC,OAAOC,SAAS;IAClB;IACA,IAAIC,eAAe,GAAGN,kBAAkB,CAAC,CAAC,CAAC;IAC3C,IAAIO,eAAe,GAAGC,IAAI,CAACC,GAAG,CAACT,kBAAkB,CAAC,CAAC,CAAC,CAACU,SAAS,GAAGX,OAAO,CAAC;IAEzE,KAAK,MAAMY,MAAM,IAAIX,kBAAkB,EAAE;MACvC,MAAMY,QAAQ,GAAGJ,IAAI,CAACC,GAAG,CAACE,MAAM,CAACD,SAAS,GAAGX,OAAO,CAAC;MAErD,IAAIa,QAAQ,GAAGL,eAAe,EAAE;QAC9BA,eAAe,GAAGK,QAAQ;QAC1BN,eAAe,GAAGK,MAAM;MAC1B;IACJ;IACA,OAAOL,eAAe;EACtB;;EAGE;EACA,SAASO,eAAeA,CAACC,KAAK,EAAE;IAC9B,MAAMC,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtB,YAAY,EAAEsB,CAAC,EAAE,EAAE;MACrCD,SAAS,CAACE,IAAI,CAAC;QACbC,GAAG,EAAEF,CAAC;QACNG,CAAC,EAAE,CAAC;QACJC,KAAK,EAAE;UAACN,KAAK,EAAG,GAAEA,KAAM,IAAG;UAAEO,IAAI,EAAG,GAAEL,CAAC,GAAEF,KAAO;QAAG,CAAC;QACpDX,QAAQ,EAAE,KAAK;QACfO,SAAS,EAAE,CAAC;QACZX,OAAO,EAAE,CAAC,CAAC;QACXuB,KAAK,EAAEvC,eAAe,CAACwC,KAAK;QAC5BC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IACA5B,gBAAgB,CAACmB,SAAS,CAAC;EAC7B;EAEA,MAAMU,KAAK,GAAG;IAAC9B,aAAa;IAAEC,gBAAgB;IAAEiB,eAAe;IAAEf;EAAwB,CAAC;EAE1F,oBACEZ,OAAA,CAACC,yBAAyB,CAACuC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhC,QAAA,EAC9CA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC0B;AAEzC,CAAC;AAACtC,GAAA,CAjDIF,0BAA0B;EAAA,QAEfN,QAAQ;AAAA;AAAA+C,EAAA,GAFnBzC,0BAA0B;AAmDhC,eAAeA,0BAA0B;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}