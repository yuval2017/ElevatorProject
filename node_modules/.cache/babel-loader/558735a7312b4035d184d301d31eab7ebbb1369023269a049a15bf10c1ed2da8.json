{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/my-app/src/components/Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/boardStyles.css';\nimport MovingObject from './MovingObject';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = _ref => {\n  _s();\n  let {\n    rows,\n    columns\n  } = _ref;\n  const squareRef = useRef(null);\n  const [buttonColors, setButtonColors] = useState(Array(rows).fill('green'));\n  const [objectPositions, setObjectPositions] = useState(Array(columns).fill({\n    x: 0,\n    y: 0\n  }));\n  useEffect(() => {\n    if (squareRef.current) {\n      const {\n        width,\n        height,\n        top,\n        left\n      } = squareRef.current.getBoundingClientRect();\n      console.log(\"Width X:\", width, \"Height Y:\", height);\n    }\n  }, []);\n  function handleElevatorReservation(rowNum, event) {\n    if (buttonColors[rowNum] !== 'green') {\n      console.log(\"here\");\n      return; // Do nothing if the button is red\n    }\n\n    setButtonColors(prevButtonColors => {\n      const newButtonColors = [...prevButtonColors];\n      newButtonColors[rowNum] = 'red';\n      return newButtonColors;\n    });\n    setTimeout(() => {\n      setButtonColors(prevButtonColors => {\n        const newButtonColors = [...prevButtonColors];\n        newButtonColors[rowNum] = 'blue';\n        return newButtonColors;\n      });\n      setTimeout(() => {\n        setButtonColors(prevButtonColors => {\n          const newButtonColors = [...prevButtonColors];\n          newButtonColors[rowNum] = 'green';\n          return newButtonColors;\n        });\n      }, 2000);\n    }, 5000);\n    const randomObjectIndex = Math.floor(Math.random() * columns);\n    const targetX = randomObjectIndex * 80; // Change 80 to the width of your square\n    const targetY = (rows - rowNum - 1) * 50; // Change 50 to the height of your square\n\n    setObjectPositions(prevPositions => {\n      const newPositions = [...prevPositions];\n      newPositions[randomObjectIndex] = {\n        x: targetX,\n        y: targetY\n      };\n      return newPositions;\n    });\n  }\n  const createBoard = () => {\n    const board = [];\n    for (let i = 0; i < rows; i++) {\n      const row = [];\n      for (let j = 0; j < columns; j++) {\n        row.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square p-2 bg-white\",\n          ref: i === 0 && j === 0 ? squareRef : null\n        }, `cell-${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this));\n      }\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-row align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-number me-2\",\n          children: `${rows - i - 1 == 0 ? \"Ground Floor\" : rows - i - 1 === 1 ? \"1st\" : rows - i - 1 === 2 ? \"2nd\" : rows - i - 1 === 3 ? \"3rd\" : `${rows - i - 1}th`}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), row, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"elevator-button\",\n          style: {\n            backgroundColor: buttonColors[rows - i - 1]\n          },\n          onClick: event => handleElevatorReservation(rows - i - 1, event),\n          children: \"Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, `row-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this));\n    }\n    return board;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [createBoard(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moving-objects-container\",\n      children: objectPositions.map((pos, index) => /*#__PURE__*/_jsxDEV(MovingObject, {\n        x: pos.x,\n        y: pos.y,\n        style: {\n          position: \"absolute\"\n        }\n      }, `moving-object-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"NS2akHrYRgDnYkOy+KR4hIGuLwM=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MovingObject","jsxDEV","_jsxDEV","Board","_ref","_s","rows","columns","squareRef","buttonColors","setButtonColors","Array","fill","objectPositions","setObjectPositions","x","y","current","width","height","top","left","getBoundingClientRect","console","log","handleElevatorReservation","rowNum","event","prevButtonColors","newButtonColors","setTimeout","randomObjectIndex","Math","floor","random","targetX","targetY","prevPositions","newPositions","createBoard","board","i","row","j","push","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","children","style","backgroundColor","onClick","map","pos","index","position","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/my-app/src/components/Board.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/boardStyles.css';\nimport MovingObject from './MovingObject'\n\nconst Board = ({ rows, columns }) => {\n  const squareRef = useRef(null);\n  const [buttonColors, setButtonColors] = useState(Array(rows).fill('green'));\n  const [objectPositions, setObjectPositions] = useState(Array(columns).fill({ x: 0, y: 0 }));\n\n  useEffect(() => {\n    if (squareRef.current) {\n      const { width, height, top, left } = squareRef.current.getBoundingClientRect();\n      console.log(\"Width X:\", width, \"Height Y:\", height);\n    }\n  }, []);\nfunction handleElevatorReservation(rowNum, event) {\n  if (buttonColors[rowNum] !== 'green') {\n    console.log(\"here\")\n    return; // Do nothing if the button is red\n  }\n    setButtonColors((prevButtonColors) => {\n      const newButtonColors = [...prevButtonColors];\n      newButtonColors[rowNum] = 'red';\n      return newButtonColors;\n    });\n  \n    setTimeout(() => {\n      setButtonColors((prevButtonColors) => {\n        const newButtonColors = [...prevButtonColors];\n        newButtonColors[rowNum] = 'blue';\n        return newButtonColors;\n      });\n  \n      setTimeout(() => {\n        setButtonColors((prevButtonColors) => {\n          const newButtonColors = [...prevButtonColors];\n          newButtonColors[rowNum] = 'green';\n          return newButtonColors;\n        });\n      }, 2000);\n    }, 5000);\n    const randomObjectIndex = Math.floor(Math.random() * columns);\n    const targetX = randomObjectIndex * 80; // Change 80 to the width of your square\n    const targetY = (rows - rowNum - 1) * 50; // Change 50 to the height of your square\n  \n    setObjectPositions((prevPositions) => {\n      const newPositions = [...prevPositions];\n      newPositions[randomObjectIndex] = { x: targetX, y: targetY };\n      return newPositions;\n    });\n  }\n  \n\n  const createBoard = () => {\n    const board = [];\n    for (let i = 0; i < rows; i++) {\n      const row = [];\n      for (let j = 0; j < columns; j++) {\n        row.push(\n          <div key={`cell-${i}-${j}`} className=\"square p-2 bg-white\" ref={i === 0 && j === 0 ? squareRef : null} />\n        );\n      }\n      board.push(\n        <div key={`row-${i}`} className=\"d-flex flex-row align-items-center\">\n          <div className=\"row-number me-2\">{`${rows-i-1==0?\"Ground Floor\" : rows-i-1===1?\"1st\":rows-i-1===2?\"2nd\": rows-i-1===3?\"3rd\":`${rows-i-1}th`}`}</div>\n          {row}\n          <button className=\"elevator-button\" style={{ backgroundColor: buttonColors[rows-i-1]}} onClick={(event)=>handleElevatorReservation(rows-i-1,event)} >Call</button>\n        </div>\n      );\n    }\n    return board;\n  };\n\n  return (\n    <div className=\"board\">\n    {createBoard()}\n    <div className=\"moving-objects-container\">\n      {objectPositions.map((pos, index) => (\n        <MovingObject\n          key={`moving-object-${index}`}\n          x={pos.x}\n          y={pos.y}\n          style={{ position: \"absolute\" }}\n        />\n      ))}\n    </div>\n  </div>\n  );\n};\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}