{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator.jsx\",\n  _s = $RefreshSig$();\nimport { animated, useSpring } from 'react-spring';\nimport '../styles/elevatorStyles.css';\nimport { useAudioPlayer } from '../context/playMusic';\nimport { useEffect } from 'react';\nimport { ELEVATOR_COLORS } from '../constants/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Elevator(_ref) {\n  _s();\n  let {\n    y,\n    style,\n    handleElevetorArrived,\n    color,\n    dist\n  } = _ref;\n  const {\n    playAudio\n  } = useAudioPlayer();\n  const handleAudioPlay = () => {\n    playAudio();\n  };\n  useEffect(() => {\n    if (color === ELEVATOR_COLORS.GREEN) {\n      handleAudioPlay();\n    }\n  }, [color, handleAudioPlay]);\n  const tension = 100 * dist;\n  const friction = 150 * dist;\n  const spring = useSpring({\n    to: {\n      y\n    },\n    config: {\n      clamp: true,\n      tension,\n      friction\n    },\n    onRest: () => {\n      handleElevetorArrived();\n    },\n    onUpdate: _ref2 => {\n      let {\n        y\n      } = _ref2;\n      console.log(`Elevator current position: ${y}`);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    className: \"elevator\",\n    style: {\n      ...style,\n      transform: spring.y.to(y => `translateY(${y}px)`)\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"elevator-image\",\n      src: `./elevatorSvg/icons8-elevator-${color}.svg`,\n      alt: \"Woops\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Elevator, \"uFFFjHVw3w7JcCQ1k3hSvE2R9Ts=\", false, function () {\n  return [useAudioPlayer, useSpring];\n});\n_c = Elevator;\n;\nexport default Elevator;\nvar _c;\n$RefreshReg$(_c, \"Elevator\");","map":{"version":3,"names":["animated","useSpring","useAudioPlayer","useEffect","ELEVATOR_COLORS","jsxDEV","_jsxDEV","Elevator","_ref","_s","y","style","handleElevetorArrived","color","dist","playAudio","handleAudioPlay","GREEN","tension","friction","spring","to","config","clamp","onRest","onUpdate","_ref2","console","log","div","className","transform","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator.jsx"],"sourcesContent":["import { animated, useSpring,  } from 'react-spring';\nimport '../styles/elevatorStyles.css'\nimport { useAudioPlayer } from '../context/playMusic';\nimport { useEffect } from 'react';\nimport { ELEVATOR_COLORS } from '../constants/constants';\n\nfunction Elevator ({ y , style, handleElevetorArrived, color, dist})  {\n  const { playAudio } = useAudioPlayer();\n\n\n\nconst handleAudioPlay = () => {\n  playAudio();\n};\n\nuseEffect(() => {\n  if (color === ELEVATOR_COLORS.GREEN) {\n      handleAudioPlay();\n  }\n}, [color, handleAudioPlay]);\nconst tension = 100 * dist;\nconst friction = 150 * dist;\n\nconst spring = useSpring({\n  to: { y },\n  config: {\n    clamp: true,\n    tension,\n    friction,\n  },\n  onRest: () => {\n    handleElevetorArrived();\n  },\n  onUpdate: ({ y }) => {\n    console.log(`Elevator current position: ${y}`);\n  },\n});\n\n\n  return (\n\n    <animated.div\n    className=\"elevator\"\n    style={{\n      ...style,\n      transform: spring.y.to(y => `translateY(${y}px)`),        \n    }}>\n      {/* <div className='image-container'></div> */}\n      <img className=\"elevator-image\" src={`./elevatorSvg/icons8-elevator-${color}.svg`} alt = \"Woops\"></img>\n    </animated.div>\n  );\n};\n\nexport default Elevator;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAU,cAAc;AACpD,OAAO,8BAA8B;AACrC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,eAAe,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,QAAQA,CAAAC,IAAA,EAAqD;EAAAC,EAAA;EAAA,IAAnD;IAAEC,CAAC;IAAGC,KAAK;IAAEC,qBAAqB;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAAN,IAAA;EACjE,MAAM;IAAEO;EAAU,CAAC,GAAGb,cAAc,EAAE;EAIxC,MAAMc,eAAe,GAAGA,CAAA,KAAM;IAC5BD,SAAS,EAAE;EACb,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,KAAKT,eAAe,CAACa,KAAK,EAAE;MACjCD,eAAe,EAAE;IACrB;EACF,CAAC,EAAE,CAACH,KAAK,EAAEG,eAAe,CAAC,CAAC;EAC5B,MAAME,OAAO,GAAG,GAAG,GAAGJ,IAAI;EAC1B,MAAMK,QAAQ,GAAG,GAAG,GAAGL,IAAI;EAE3B,MAAMM,MAAM,GAAGnB,SAAS,CAAC;IACvBoB,EAAE,EAAE;MAAEX;IAAE,CAAC;IACTY,MAAM,EAAE;MACNC,KAAK,EAAE,IAAI;MACXL,OAAO;MACPC;IACF,CAAC;IACDK,MAAM,EAAEA,CAAA,KAAM;MACZZ,qBAAqB,EAAE;IACzB,CAAC;IACDa,QAAQ,EAAEC,KAAA,IAAW;MAAA,IAAV;QAAEhB;MAAE,CAAC,GAAAgB,KAAA;MACdC,OAAO,CAACC,GAAG,CAAE,8BAA6BlB,CAAE,EAAC,CAAC;IAChD;EACF,CAAC,CAAC;EAGA,oBAEEJ,OAAA,CAACN,QAAQ,CAAC6B,GAAG;IACbC,SAAS,EAAC,UAAU;IACpBnB,KAAK,EAAE;MACL,GAAGA,KAAK;MACRoB,SAAS,EAAEX,MAAM,CAACV,CAAC,CAACW,EAAE,CAACX,CAAC,IAAK,cAAaA,CAAE,KAAI;IAClD,CAAE;IAAAsB,QAAA,eAEA1B,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAACG,GAAG,EAAG,iCAAgCpB,KAAM,MAAM;MAACqB,GAAG,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1F;AAEnB;AAAC7B,EAAA,CA7CQF,QAAQ;EAAA,QACOL,cAAc,EAgBvBD,SAAS;AAAA;AAAAsC,EAAA,GAjBfhC,QAAQ;AA6ChB;AAED,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}