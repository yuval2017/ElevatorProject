{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/elevatorController.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElevatorControllerContext = /*#__PURE__*/createContext();\nexport const useElevatorController = () => {\n  _s();\n  return useContext(ElevatorControllerContext);\n};\n_s(useElevatorController, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst ElevatorControllerProvider = _ref => {\n  _s2();\n  let {\n    children,\n    elevatorsNum\n  } = _ref;\n  const [elevatorsData, setElevatorsData] = useState([]);\n  const [squareData, setSquareData] = useState({});\n\n  // function to change the elevator position, width, height dynamically\n  const width = squareData.width;\n  const height = squareData.height;\n  function initElevatorData(width) {\n    const elevators = [];\n    for (let i = 0; i < columns; i++) {\n      elevators.push({\n        key: i,\n        y: 0,\n        style: {\n          width: `${width}px`,\n          left: `${i * width}px`\n        },\n        handleElevetorArrived: handleElevetorArrived(i, 0),\n        occupied: false,\n        currFloor: 0,\n        toFloor: -1,\n        color: ELEVATOR_COLORS.BLACK,\n        dist: 0\n      });\n    }\n    setElevatorsData(elevators);\n  }\n  const value = {\n    width,\n    elevatorsData,\n    elevatorsNum\n  };\n  return /*#__PURE__*/_jsxDEV(ElevatorControllerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s2(ElevatorControllerProvider, \"Mvvt3jgZ+uNrdqpB3fcWYWz/bSU=\");\n_c = ElevatorControllerProvider;\nexport default ElevatorControllerProvider;\nvar _c;\n$RefreshReg$(_c, \"ElevatorControllerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ElevatorControllerContext","useElevatorController","_s","ElevatorControllerProvider","_ref","_s2","children","elevatorsNum","elevatorsData","setElevatorsData","squareData","setSquareData","width","height","initElevatorData","elevators","i","columns","push","key","y","style","left","handleElevetorArrived","occupied","currFloor","toFloor","color","ELEVATOR_COLORS","BLACK","dist","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/elevatorController.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst ElevatorControllerContext = createContext();\n\nexport const useElevatorController = () => {\n  return useContext(ElevatorControllerContext);\n};\n\nconst ElevatorControllerProvider = ({ children, elevatorsNum }) => {\n\n  const [elevatorsData, setElevatorsData] = useState([]);\n  const [squareData, setSquareData] = useState({})\n\n  // function to change the elevator position, width, height dynamically\n  const width = squareData.width;\n  const height = squareData.height;\n\n  function initElevatorData(width) {\n    const elevators = [];\n    for (let i = 0; i < columns; i++) {\n      elevators.push({\n        key: i,\n        y: 0,\n        style: {width: `${width}px`, left: `${i*(width)}px`},\n        handleElevetorArrived: handleElevetorArrived(i, 0),\n        occupied: false,\n        currFloor: 0,\n        toFloor: -1,\n        color: ELEVATOR_COLORS.BLACK,\n        dist: 0,\n      });\n    }\n    setElevatorsData(elevators);\n  }\n\n  const value = {width, elevatorsData, elevatorsNum};\n\n  return (\n    <ElevatorControllerContext.Provider value={value}>\n      {children}\n    </ElevatorControllerContext.Provider>\n  );\n};\n\nexport default ElevatorControllerProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,yBAAyB,gBAAGL,aAAa,EAAE;AAEjD,OAAO,MAAMM,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,OAAON,UAAU,CAACI,yBAAyB,CAAC;AAC9C,CAAC;AAACE,EAAA,CAFWD,qBAAqB;AAIlC,MAAME,0BAA0B,GAAGC,IAAA,IAAgC;EAAAC,GAAA;EAAA,IAA/B;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAE5D,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMe,KAAK,GAAGF,UAAU,CAACE,KAAK;EAC9B,MAAMC,MAAM,GAAGH,UAAU,CAACG,MAAM;EAEhC,SAASC,gBAAgBA,CAACF,KAAK,EAAE;IAC/B,MAAMG,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,OAAO,EAAED,CAAC,EAAE,EAAE;MAChCD,SAAS,CAACG,IAAI,CAAC;QACbC,GAAG,EAAEH,CAAC;QACNI,CAAC,EAAE,CAAC;QACJC,KAAK,EAAE;UAACT,KAAK,EAAG,GAAEA,KAAM,IAAG;UAAEU,IAAI,EAAG,GAAEN,CAAC,GAAEJ,KAAO;QAAG,CAAC;QACpDW,qBAAqB,EAAEA,qBAAqB,CAACP,CAAC,EAAE,CAAC,CAAC;QAClDQ,QAAQ,EAAE,KAAK;QACfC,SAAS,EAAE,CAAC;QACZC,OAAO,EAAE,CAAC,CAAC;QACXC,KAAK,EAAEC,eAAe,CAACC,KAAK;QAC5BC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IACArB,gBAAgB,CAACM,SAAS,CAAC;EAC7B;EAEA,MAAMgB,KAAK,GAAG;IAACnB,KAAK;IAAEJ,aAAa;IAAED;EAAY,CAAC;EAElD,oBACER,OAAA,CAACC,yBAAyB,CAACgC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EAC9CA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC0B;AAEzC,CAAC;AAAC/B,GAAA,CAlCIF,0BAA0B;AAAAkC,EAAA,GAA1BlC,0BAA0B;AAoChC,eAAeA,0BAA0B;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}