{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/CountTimer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Countdown from 'react-countdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountDownTimer = () => {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [time, setTime] = useState(300000); // initial time in milliseconds\n\n  const handleStart = () => {\n    setIsRunning(true);\n  };\n  const handleStop = () => {\n    setIsRunning(false);\n  };\n  const handleReset = () => {\n    setIsRunning(false);\n    setTime(300000);\n  };\n  const renderer = _ref => {\n    let {\n      minutes,\n      seconds\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Countdown, {\n      date: Date.now() + time,\n      autoStart: false,\n      onComplete: handleStop,\n      renderer: renderer,\n      running: isRunning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CountDownTimer, \"sz3UBWr2/IGKu7ZNWxSjV2Pfml8=\");\n_c = CountDownTimer;\nexport default CountDownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountDownTimer\");","map":{"version":3,"names":["React","useState","Countdown","jsxDEV","_jsxDEV","CountDownTimer","_s","isRunning","setIsRunning","time","setTime","handleStart","handleStop","handleReset","renderer","_ref","minutes","seconds","children","fileName","_jsxFileName","lineNumber","columnNumber","date","Date","now","autoStart","onComplete","running","onClick","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/CountTimer.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Countdown from 'react-countdown';\n\nconst CountDownTimer = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [time, setTime] = useState(300000); // initial time in milliseconds\n\n  const handleStart = () => {\n    setIsRunning(true);\n  };\n\n  const handleStop = () => {\n    setIsRunning(false);\n  };\n\n  const handleReset = () => {\n    setIsRunning(false);\n    setTime(300000);\n  };\n\n  const renderer = ({ minutes, seconds }) => {\n    return (\n      <div>\n        <span>{minutes}</span>:<span>{seconds}</span>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Countdown\n        date={Date.now() + time}\n        autoStart={false}\n        onComplete={handleStop}\n        renderer={renderer}\n        running={isRunning}\n      />\n      <button onClick={handleStart}>Start</button>\n      <button onClick={handleStop}>Stop</button>\n      <button onClick={handleReset}>Reset</button>\n    </div>\n  );\n};\n\nexport default CountDownTimer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE1C,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBH,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvBJ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBL,YAAY,CAAC,KAAK,CAAC;IACnBE,OAAO,CAAC,MAAM,CAAC;EACjB,CAAC;EAED,MAAMI,QAAQ,GAAGC,IAAA,IAA0B;IAAA,IAAzB;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAAF,IAAA;IACpC,oBACEX,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAOF;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,KAAC,eAAAlB,OAAA;QAAAc,QAAA,EAAOD;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC;EAEV,CAAC;EAED,oBACElB,OAAA;IAAAc,QAAA,gBACEd,OAAA,CAACF,SAAS;MACRqB,IAAI,EAAEC,IAAI,CAACC,GAAG,EAAE,GAAGhB,IAAK;MACxBiB,SAAS,EAAE,KAAM;MACjBC,UAAU,EAAEf,UAAW;MACvBE,QAAQ,EAAEA,QAAS;MACnBc,OAAO,EAAErB;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB,eACFlB,OAAA;MAAQyB,OAAO,EAAElB,WAAY;MAAAO,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC5ClB,OAAA;MAAQyB,OAAO,EAAEjB,UAAW;MAAAM,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC1ClB,OAAA;MAAQyB,OAAO,EAAEhB,WAAY;MAAAK,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxC;AAEV,CAAC;AAAChB,EAAA,CAvCID,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}