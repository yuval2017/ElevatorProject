{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator2.jsx\",\n  _s = $RefreshSig$();\nimport { useSpring, animated } from 'react-spring';\nimport { useEffect } from 'react';\n\n// Custom interpolation function that uses easing to start and stop the animation smoothly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst interpolateEasing = (start, stop) => t => start + (stop - start) * (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\nexport function Elevator2(_ref) {\n  _s();\n  let {\n    y\n  } = _ref;\n  const [springProps, setSpringProps] = useSpring(() => ({\n    y\n  }));\n  useEffect(() => {\n    // Get the current y value from the animated spring\n    const currentY = springProps.y.get();\n\n    // Calculate the distance between the current y value and the new y value\n    const distance = y - currentY;\n\n    // Calculate the velocity needed to reach the new y value in 1 second using easing\n    const velocity = distance / interpolateEasing(1, 0)(0.5);\n\n    // Update the animated spring with the new y value and velocity\n    setSpringProps({\n      y,\n      velocity: {\n        y: velocity\n      },\n      config: {\n        mass: 1,\n        tension: 180,\n        friction: 12\n      }\n    });\n  }, [y]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '50px',\n      height: '200px'\n    },\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      style: {\n        width: '50px',\n        height: '50px',\n        backgroundColor: 'red',\n        position: 'absolute',\n        bottom: 0,\n        transform: springProps.y.interpolate(interpolateEasing(0, 200)),\n        zIndex: 100\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Elevator2, \"eb2bJUR/5JUtCHMA0CQBV4NnmQM=\", false, function () {\n  return [useSpring];\n});\n_c = Elevator2;\nvar _c;\n$RefreshReg$(_c, \"Elevator2\");","map":{"version":3,"names":["useSpring","animated","useEffect","jsxDEV","_jsxDEV","interpolateEasing","start","stop","t","Elevator2","_ref","_s","y","springProps","setSpringProps","currentY","get","distance","velocity","config","mass","tension","friction","style","width","height","children","div","backgroundColor","position","bottom","transform","interpolate","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator2.jsx"],"sourcesContent":["import { useSpring, animated } from 'react-spring';\nimport { useEffect } from 'react';\n\n// Custom interpolation function that uses easing to start and stop the animation smoothly\nconst interpolateEasing = (start, stop) => (t) =>\n  start + (stop - start) * (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\nexport function Elevator2({ y }) {\n  const [springProps, setSpringProps] = useSpring(() => ({ y }));\n\n  useEffect(() => {\n    // Get the current y value from the animated spring\n    const currentY = springProps.y.get();\n\n    // Calculate the distance between the current y value and the new y value\n    const distance = y - currentY;\n\n    // Calculate the velocity needed to reach the new y value in 1 second using easing\n    const velocity = distance / interpolateEasing(1, 0)(0.5);\n\n    // Update the animated spring with the new y value and velocity\n    setSpringProps({\n      y,\n      velocity: { y: velocity },\n      config: { mass: 1, tension: 180, friction: 12 },\n    });\n  }, [y]);\n\n  return (\n    <div style={{ width: '50px', height: '200px' }}>\n      <animated.div\n        style={{\n          width: '50px',\n          height: '50px',\n          backgroundColor: 'red',\n          position: 'absolute',\n          bottom: 0,\n          transform: springProps.y.interpolate(interpolateEasing(0, 200)),\n          zIndex: 100,\n        }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,cAAc;AAClD,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAMC,CAAC,IAC3CF,KAAK,GAAG,CAACC,IAAI,GAAGD,KAAK,KAAKE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGA,CAAC,IAAIA,CAAC,CAAC;AAEvE,OAAO,SAASC,SAASA,CAAAC,IAAA,EAAQ;EAAAC,EAAA;EAAA,IAAP;IAAEC;EAAE,CAAC,GAAAF,IAAA;EAC7B,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGd,SAAS,CAAC,OAAO;IAAEY;EAAE,CAAC,CAAC,CAAC;EAE9DV,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,QAAQ,GAAGF,WAAW,CAACD,CAAC,CAACI,GAAG,EAAE;;IAEpC;IACA,MAAMC,QAAQ,GAAGL,CAAC,GAAGG,QAAQ;;IAE7B;IACA,MAAMG,QAAQ,GAAGD,QAAQ,GAAGZ,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;;IAExD;IACAS,cAAc,CAAC;MACbF,CAAC;MACDM,QAAQ,EAAE;QAAEN,CAAC,EAAEM;MAAS,CAAC;MACzBC,MAAM,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,OAAO,EAAE,GAAG;QAAEC,QAAQ,EAAE;MAAG;IAChD,CAAC,CAAC;EACJ,CAAC,EAAE,CAACV,CAAC,CAAC,CAAC;EAEP,oBACER,OAAA;IAAKmB,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC7CtB,OAAA,CAACH,QAAQ,CAAC0B,GAAG;MACXJ,KAAK,EAAE;QACLC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdG,eAAe,EAAE,KAAK;QACtBC,QAAQ,EAAE,UAAU;QACpBC,MAAM,EAAE,CAAC;QACTC,SAAS,EAAElB,WAAW,CAACD,CAAC,CAACoB,WAAW,CAAC3B,iBAAiB,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/D4B,MAAM,EAAE;MACV;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAC1B,EAAA,CApCeF,SAAS;EAAA,QACeT,SAAS;AAAA;AAAAsC,EAAA,GADjC7B,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}