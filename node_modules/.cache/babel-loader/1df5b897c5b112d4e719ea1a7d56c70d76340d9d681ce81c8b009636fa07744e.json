{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/floorController.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { BUTTON_STATUS } from '../constants/constants';\nimport { TIMER } from '../constants/constants';\nimport Floor from '../components/Floor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloorControllerContext = /*#__PURE__*/createContext();\nexport const useFloorController = () => {\n  _s();\n  return useContext(FloorControllerContext);\n};\n_s(useFloorController, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst FloorControllerProvider = _ref => {\n  _s2();\n  let {\n    children,\n    floorsNum\n  } = _ref;\n  const [floorsData, setFloorsData] = useState(createFloorsData());\n  function createFloorsData() {\n    const ans = [];\n    for (let i = 0; i < rows; i++) {\n      const timesArr = new Array(columns).fill(TIMER.STOP);\n      ans.push({\n        key: `floor-${i}`,\n        index: rows - i - 1,\n        buttonStatus: BUTTON_STATUS.CALL,\n        timeArr: timesArr\n      });\n    }\n    return ans;\n  }\n  function createFloors(handleFloorReservationClouser) {\n    return floorsData.map(floorData => /*#__PURE__*/_jsxDEV(Floor, {\n      columns: columns,\n      squareRef: squareRef,\n      index: floorData.index,\n      buttonStatus: floorData.buttonStatus,\n      handleElevatorReservation: handleFloorReservationClouser,\n      timesData: floorData.timeArr\n    }, floorData.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this));\n  }\n  ;\n  const value = {\n    floorsData,\n    setFloorsData,\n    createFloors,\n    createFloorsData\n  };\n  return /*#__PURE__*/_jsxDEV(FloorControllerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s2(FloorControllerProvider, \"o13BJnMD4tKLJYWG+BUUEOZK1bw=\");\n_c = FloorControllerProvider;\nexport default FloorControllerProvider;\nvar _c;\n$RefreshReg$(_c, \"FloorControllerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","BUTTON_STATUS","TIMER","Floor","jsxDEV","_jsxDEV","FloorControllerContext","useFloorController","_s","FloorControllerProvider","_ref","_s2","children","floorsNum","floorsData","setFloorsData","createFloorsData","ans","i","rows","timesArr","Array","columns","fill","STOP","push","key","index","buttonStatus","CALL","timeArr","createFloors","handleFloorReservationClouser","map","floorData","squareRef","handleElevatorReservation","timesData","fileName","_jsxFileName","lineNumber","columnNumber","value","Provider","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/floorController.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { BUTTON_STATUS } from '../constants/constants';\nimport { TIMER } from '../constants/constants';\nimport Floor from '../components/Floor';\n\n\n\nconst FloorControllerContext = createContext();\n\nexport const useFloorController = () => {\n  return useContext(FloorControllerContext);\n};\n\n\nconst FloorControllerProvider = ({ children, floorsNum }) => {\n\n  const [floorsData, setFloorsData] = useState(createFloorsData())\n\n  function createFloorsData() {\n    const ans = [];\n    for (let i = 0; i < rows; i++) {\n      const timesArr = new Array(columns).fill(TIMER.STOP); \n      ans.push({\n        key: `floor-${i}`,\n        index: rows - i - 1,\n        buttonStatus: BUTTON_STATUS.CALL,\n        timeArr: timesArr\n      });\n    }\n    return ans;\n  }\n  function createFloors(handleFloorReservationClouser){\n    return floorsData.map((floorData) => (\n      <Floor\n        columns={columns}\n        squareRef={squareRef}\n        key={floorData.key}\n        index={floorData.index}\n        buttonStatus={floorData.buttonStatus}\n        handleElevatorReservation={handleFloorReservationClouser}\n        timesData = {floorData.timeArr}\n      />\n    ));\n  };\n  const value = {floorsData, setFloorsData, createFloors, createFloorsData}\n  return (\n    <FloorControllerContext.Provider value={value}>\n      {children}\n    </FloorControllerContext.Provider>\n  );\n};\n\nexport default FloorControllerProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxC,MAAMC,sBAAsB,gBAAGR,aAAa,EAAE;AAE9C,OAAO,MAAMS,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,OAAOT,UAAU,CAACO,sBAAsB,CAAC;AAC3C,CAAC;AAACE,EAAA,CAFWD,kBAAkB;AAK/B,MAAME,uBAAuB,GAAGC,IAAA,IAA6B;EAAAC,GAAA;EAAA,IAA5B;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAAH,IAAA;EAEtD,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACgB,gBAAgB,EAAE,CAAC;EAEhE,SAASA,gBAAgBA,CAAA,EAAG;IAC1B,MAAMC,GAAG,GAAG,EAAE;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,EAAED,CAAC,EAAE,EAAE;MAC7B,MAAME,QAAQ,GAAG,IAAIC,KAAK,CAACC,OAAO,CAAC,CAACC,IAAI,CAACrB,KAAK,CAACsB,IAAI,CAAC;MACpDP,GAAG,CAACQ,IAAI,CAAC;QACPC,GAAG,EAAG,SAAQR,CAAE,EAAC;QACjBS,KAAK,EAAER,IAAI,GAAGD,CAAC,GAAG,CAAC;QACnBU,YAAY,EAAE3B,aAAa,CAAC4B,IAAI;QAChCC,OAAO,EAAEV;MACX,CAAC,CAAC;IACJ;IACA,OAAOH,GAAG;EACZ;EACA,SAASc,YAAYA,CAACC,6BAA6B,EAAC;IAClD,OAAOlB,UAAU,CAACmB,GAAG,CAAEC,SAAS,iBAC9B7B,OAAA,CAACF,KAAK;MACJmB,OAAO,EAAEA,OAAQ;MACjBa,SAAS,EAAEA,SAAU;MAErBR,KAAK,EAAEO,SAAS,CAACP,KAAM;MACvBC,YAAY,EAAEM,SAAS,CAACN,YAAa;MACrCQ,yBAAyB,EAAEJ,6BAA8B;MACzDK,SAAS,EAAIH,SAAS,CAACJ;IAAQ,GAJ1BI,SAAS,CAACR,GAAG;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMrB,CAAC;EACJ;EAAC;EACD,MAAMC,KAAK,GAAG;IAAC5B,UAAU;IAAEC,aAAa;IAAEgB,YAAY;IAAEf;EAAgB,CAAC;EACzE,oBACEX,OAAA,CAACC,sBAAsB,CAACqC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA9B,QAAA,EAC3CA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACuB;AAEtC,CAAC;AAAC9B,GAAA,CApCIF,uBAAuB;AAAAmC,EAAA,GAAvBnC,uBAAuB;AAsC7B,eAAeA,uBAAuB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}