{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/elevatorController.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { ELEVATOR_COLORS } from '../constants/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElevatorControllerContext = /*#__PURE__*/createContext();\nexport const useElevatorController = () => {\n  _s();\n  return useContext(ElevatorControllerContext);\n};\n_s(useElevatorController, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst ElevatorControllerProvider = _ref => {\n  _s2();\n  let {\n    children,\n    elevatorsNum\n  } = _ref;\n  const [elevatorsData2, setElevatorsData2] = useState([]);\n\n  // function to change the elevator position, width, height dynamically\n\n  function initElevatorDta2(width) {\n    const elevators = [];\n    for (let i = 0; i < elevatorsNum; i++) {\n      elevators.push({\n        key: i,\n        y: 0,\n        style: {\n          width: `${width}px`,\n          left: `${i * width}px`\n        },\n        occupied: false,\n        currFloor: 0,\n        toFloor: -1,\n        color: ELEVATOR_COLORS.BLACK,\n        dist: 0\n      });\n    }\n    setElevatorsData(elevators);\n  }\n  const value = {\n    elevatorsData2,\n    setElevatorsData2,\n    initElevatorDta2\n  };\n  return /*#__PURE__*/_jsxDEV(ElevatorControllerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s2(ElevatorControllerProvider, \"fDOLH1tG5WGAz6cWzsxKI0qdU3c=\");\n_c = ElevatorControllerProvider;\nexport default ElevatorControllerProvider;\nvar _c;\n$RefreshReg$(_c, \"ElevatorControllerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","ELEVATOR_COLORS","jsxDEV","_jsxDEV","ElevatorControllerContext","useElevatorController","_s","ElevatorControllerProvider","_ref","_s2","children","elevatorsNum","elevatorsData2","setElevatorsData2","initElevatorDta2","width","elevators","i","push","key","y","style","left","occupied","currFloor","toFloor","color","BLACK","dist","setElevatorsData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/elevatorController.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { ELEVATOR_COLORS } from '../constants/constants';\nconst ElevatorControllerContext = createContext();\n\nexport const useElevatorController = () => {\n  return useContext(ElevatorControllerContext);\n};\n\nconst ElevatorControllerProvider = ({ children, elevatorsNum }) => {\n\n  const [elevatorsData2, setElevatorsData2] = useState([]);\n\n  // function to change the elevator position, width, height dynamically\n\n  function initElevatorDta2(width) {\n    const elevators = [];\n    for (let i = 0; i < elevatorsNum; i++) {\n      elevators.push({\n        key: i,\n        y: 0,\n        style: {width: `${width}px`, left: `${i*(width)}px`},\n        occupied: false,\n        currFloor: 0,\n        toFloor: -1,\n        color: ELEVATOR_COLORS.BLACK,\n        dist: 0,\n      });\n    }\n    setElevatorsData(elevators);\n  }\n\n  const value = {elevatorsData2, setElevatorsData2, initElevatorDta2};\n\n  return (\n    <ElevatorControllerContext.Provider value={value}>\n      {children}\n    </ElevatorControllerContext.Provider>\n  );\n};\n\nexport default ElevatorControllerProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,eAAe,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzD,MAAMC,yBAAyB,gBAAGN,aAAa,EAAE;AAEjD,OAAO,MAAMO,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,OAAOP,UAAU,CAACK,yBAAyB,CAAC;AAC9C,CAAC;AAACE,EAAA,CAFWD,qBAAqB;AAIlC,MAAME,0BAA0B,GAAGC,IAAA,IAAgC;EAAAC,GAAA;EAAA,IAA/B;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAE5D,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAExD;;EAEA,SAASc,gBAAgBA,CAACC,KAAK,EAAE;IAC/B,MAAMC,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,EAAEM,CAAC,EAAE,EAAE;MACrCD,SAAS,CAACE,IAAI,CAAC;QACbC,GAAG,EAAEF,CAAC;QACNG,CAAC,EAAE,CAAC;QACJC,KAAK,EAAE;UAACN,KAAK,EAAG,GAAEA,KAAM,IAAG;UAAEO,IAAI,EAAG,GAAEL,CAAC,GAAEF,KAAO;QAAG,CAAC;QACpDQ,QAAQ,EAAE,KAAK;QACfC,SAAS,EAAE,CAAC;QACZC,OAAO,EAAE,CAAC,CAAC;QACXC,KAAK,EAAEzB,eAAe,CAAC0B,KAAK;QAC5BC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IACAC,gBAAgB,CAACb,SAAS,CAAC;EAC7B;EAEA,MAAMc,KAAK,GAAG;IAAClB,cAAc;IAAEC,iBAAiB;IAAEC;EAAgB,CAAC;EAEnE,oBACEX,OAAA,CAACC,yBAAyB,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAC9CA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC0B;AAEzC,CAAC;AAAC1B,GAAA,CA9BIF,0BAA0B;AAAA6B,EAAA,GAA1B7B,0BAA0B;AAgChC,eAAeA,0BAA0B;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}