{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/playMusic.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayerContext = /*#__PURE__*/createContext();\nfunction AudioPlayerProvider(props) {\n  _s();\n  const {\n    path\n  } = props;\n  const [audioPath, setAudioPath] = useState(path);\n  const audioRef = useRef(null);\n  function playAudio() {\n    audioRef.current.play();\n  }\n  const value = {\n    audioPath,\n    setAudioPath,\n    playAudio\n  };\n  return /*#__PURE__*/_jsxDEV(AudioPlayerContext.Provider, {\n    value: value,\n    children: [props.children, /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audioPath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(AudioPlayerProvider, \"rUfECYnz4eJTCGPEfPOqHvZQzW0=\");\n_c = AudioPlayerProvider;\nfunction useAudioPlayer() {\n  _s2();\n  const context = React.useContext(AudioPlayerContext);\n  if (!context) {\n    throw new Error('useAudioPlayer must be used within an AudioPlayerProvider');\n  }\n  return context;\n}\n_s2(useAudioPlayer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { AudioPlayerProvider, useAudioPlayer };\nvar _c;\n$RefreshReg$(_c, \"AudioPlayerProvider\");","map":{"version":3,"names":["React","useState","useRef","createContext","jsxDEV","_jsxDEV","AudioPlayerContext","AudioPlayerProvider","props","_s","path","audioPath","setAudioPath","audioRef","playAudio","current","play","value","Provider","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","key","_c","useAudioPlayer","_s2","context","useContext","Error","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/playMusic.jsx"],"sourcesContent":["import React, { useState, useRef, createContext } from 'react';\n\nconst AudioPlayerContext = createContext();\n\nfunction AudioPlayerProvider(props) {\n  const { path} = props;\n  const [audioPath, setAudioPath] = useState(path);\n  const audioRef = useRef(null);\n\n  function playAudio() {\n    audioRef.current.play();\n  }\n\n  const value = {\n    audioPath,\n    setAudioPath,\n    playAudio\n  };\n\n  return (\n    <AudioPlayerContext.Provider value={value} key={key}>\n      {props.children}\n      <audio ref={audioRef} src={audioPath} />\n    </AudioPlayerContext.Provider>\n  );\n}\n\nfunction useAudioPlayer() {\n  const context = React.useContext(AudioPlayerContext);\n  if (!context) {\n    throw new Error('useAudioPlayer must be used within an AudioPlayerProvider');\n  }\n  return context;\n}\n\nexport { AudioPlayerProvider, useAudioPlayer };\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,kBAAkB,gBAAGH,aAAa,EAAE;AAE1C,SAASI,mBAAmBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAI,CAAC,GAAGF,KAAK;EACrB,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAACS,IAAI,CAAC;EAChD,MAAMG,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE7B,SAASY,SAASA,CAAA,EAAG;IACnBD,QAAQ,CAACE,OAAO,CAACC,IAAI,EAAE;EACzB;EAEA,MAAMC,KAAK,GAAG;IACZN,SAAS;IACTC,YAAY;IACZE;EACF,CAAC;EAED,oBACET,OAAA,CAACC,kBAAkB,CAACY,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAE,QAAA,GACvCX,KAAK,CAACW,QAAQ,eACfd,OAAA;MAAOe,GAAG,EAAEP,QAAS;MAACQ,GAAG,EAAEV;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,GAFMC,GAAG;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGrB;AAElC;AAAChB,EAAA,CArBQF,mBAAmB;AAAAoB,EAAA,GAAnBpB,mBAAmB;AAuB5B,SAASqB,cAAcA,CAAA,EAAG;EAAAC,GAAA;EACxB,MAAMC,OAAO,GAAG9B,KAAK,CAAC+B,UAAU,CAACzB,kBAAkB,CAAC;EACpD,IAAI,CAACwB,OAAO,EAAE;IACZ,MAAM,IAAIE,KAAK,CAAC,2DAA2D,CAAC;EAC9E;EACA,OAAOF,OAAO;AAChB;AAACD,GAAA,CANQD,cAAc;AAQvB,SAASrB,mBAAmB,EAAEqB,cAAc;AAAG,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}