{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/CountTimer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Countdown from 'react-countdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountDownTimer = () => {\n  _s();\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalRef = useRef();\n  const handleStart = () => {\n    setIsRunning(true);\n    intervalRef.current = setInterval(() => {\n      setTime(prevTime => prevTime + 10);\n    }, 10);\n  };\n  const handleStop = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n  };\n  const handleReset = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setTime(0);\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 1000 / 60 % 60);\n    const seconds = Math.floor(time / 1000 % 60);\n    const milliseconds = Math.floor(time % 1000 / 10);\n    const formattedMinutes = minutes.toString().padStart(2, \"0\");\n    const formattedSeconds = seconds.toString().padStart(2, \"0\");\n    const formattedMilliseconds = milliseconds.toString().padStart(2, \"0\");\n    return `${formattedMinutes}:${formattedSeconds}:${formattedMilliseconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: formatTime(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(CountDownTimer, \"ofZFEAVhCn/nAwRcHcQ+6CrYP98=\");\n_c = CountDownTimer;\nexport default CountDownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountDownTimer\");","map":{"version":3,"names":["React","useState","useRef","Countdown","jsxDEV","_jsxDEV","CountDownTimer","_s","time","setTime","isRunning","setIsRunning","intervalRef","handleStart","current","setInterval","prevTime","handleStop","clearInterval","handleReset","formatTime","minutes","Math","floor","seconds","milliseconds","formattedMinutes","toString","padStart","formattedSeconds","formattedMilliseconds","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/CountTimer.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Countdown from 'react-countdown';\n\nconst CountDownTimer = () => {\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalRef = useRef();\n\n  const handleStart = () => {\n    setIsRunning(true);\n    intervalRef.current = setInterval(() => {\n      setTime((prevTime) => prevTime + 10);\n    }, 10);\n  };\n\n  const handleStop = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n  };\n\n  const handleReset = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setTime(0);\n  };\n\n  const formatTime = (time) => {\n    const minutes = Math.floor((time / 1000 / 60) % 60);\n    const seconds = Math.floor((time / 1000) % 60);\n    const milliseconds = Math.floor((time % 1000) / 10);\n\n    const formattedMinutes = minutes.toString().padStart(2, \"0\");\n    const formattedSeconds = seconds.toString().padStart(2, \"0\");\n    const formattedMilliseconds = milliseconds.toString().padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}:${formattedMilliseconds}`;\n  };\n\n  return (\n    <div>\n      <h1>{formatTime(time)}</h1>\n      {isRunning ? (\n        <button onClick={handleStop}>Stop</button>\n      ) : (\n        <button onClick={handleStart}>Start</button>\n      )}\n      <button onClick={handleReset}>Reset</button>\n    </div>\n  );\n};\n\nexport default CountDownTimer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,SAAS,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMW,WAAW,GAAGV,MAAM,EAAE;EAE5B,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBF,YAAY,CAAC,IAAI,CAAC;IAClBC,WAAW,CAACE,OAAO,GAAGC,WAAW,CAAC,MAAM;MACtCN,OAAO,CAAEO,QAAQ,IAAKA,QAAQ,GAAG,EAAE,CAAC;IACtC,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBC,aAAa,CAACN,WAAW,CAACE,OAAO,CAAC;IAClCH,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBD,aAAa,CAACN,WAAW,CAACE,OAAO,CAAC;IAClCH,YAAY,CAAC,KAAK,CAAC;IACnBF,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMW,UAAU,GAAIZ,IAAI,IAAK;IAC3B,MAAMa,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAEf,IAAI,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;IACnD,MAAMgB,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEf,IAAI,GAAG,IAAI,GAAI,EAAE,CAAC;IAC9C,MAAMiB,YAAY,GAAGH,IAAI,CAACC,KAAK,CAAEf,IAAI,GAAG,IAAI,GAAI,EAAE,CAAC;IAEnD,MAAMkB,gBAAgB,GAAGL,OAAO,CAACM,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC5D,MAAMC,gBAAgB,GAAGL,OAAO,CAACG,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC5D,MAAME,qBAAqB,GAAGL,YAAY,CAACE,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAEtE,OAAQ,GAAEF,gBAAiB,IAAGG,gBAAiB,IAAGC,qBAAsB,EAAC;EAC3E,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAKX,UAAU,CAACZ,IAAI;IAAC;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EAC1BzB,SAAS,gBACRL,OAAA;MAAQ+B,OAAO,EAAEnB,UAAW;MAAAc,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,gBAE1C9B,OAAA;MAAQ+B,OAAO,EAAEvB,WAAY;MAAAkB,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpC,eACD9B,OAAA;MAAQ+B,OAAO,EAAEjB,WAAY;MAAAY,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxC;AAEV,CAAC;AAAC5B,EAAA,CA9CID,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AAgDpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}