{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/floorController.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useRef, useState } from 'react';\nimport { BUTTON_STATUS } from '../constants/constants';\nimport { TIMER } from '../constants/constants';\nimport Floor from '../components/Floor';\nimport { useElevatorController } from './elevatorController';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloorControllerContext = /*#__PURE__*/createContext();\nexport const useFloorController = () => {\n  _s();\n  return useContext(FloorControllerContext);\n};\n_s(useFloorController, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst FloorControllerProvider = _ref => {\n  _s2();\n  let {\n    children,\n    columns,\n    rows\n  } = _ref;\n  const {\n    squareRef\n  } = useElevatorController();\n  const [floorsData, setFloorsData] = useState(createFloorsData());\n  const floorOnClickHandlerRef = useRef();\n  function createFloorsData() {\n    const ans = [];\n    for (let i = 0; i < rows; i++) {\n      const timesArr = new Array(columns).fill(TIMER.STOP);\n      ans.push({\n        key: `floor-${i}`,\n        index: rows - i - 1,\n        buttonStatus: BUTTON_STATUS.CALL,\n        timeArr: timesArr\n      });\n    }\n    return ans;\n  }\n\n  //change the clock status from running/stop/reset with the visibility\n  function handleClockAction(floorIndex, elevatorIndex, _ref2) {\n    let {\n      onChange: action,\n      styles: newStyles\n    } = _ref2;\n    //help function inside a function\n    function setTime(timersArr) {\n      return timersArr.map((timer, i) => {\n        if (i === elevatorIndex) {\n          return {\n            ...timer,\n            onChange: action,\n            styles: newStyles\n          };\n        } else {\n          return timer;\n        }\n      });\n    }\n\n    //set the flloor data to change the clocks\n    setFloorsData(prevData => prevData.map(floorData => {\n      const newData = floorData.index === floorIndex ? {\n        ...floorData,\n        timeArr: setTime(floorData.timeArr)\n      } : floorData;\n      if (floorData.index === floorIndex) {}\n      return newData;\n    }));\n  }\n\n  //set bottun color \n  function setButtonStatus(floorIndex, newStatus) {\n    setFloorsData(prevData => prevData.map(floorData => floorData.index === floorIndex ? {\n      ...floorData,\n      buttonStatus: newStatus\n    } : floorData));\n  }\n  const value = {\n    handleClockAction,\n    setButtonStatus,\n    floorsData\n  };\n  return /*#__PURE__*/_jsxDEV(FloorControllerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s2(FloorControllerProvider, \"boz4eGLswJm0fcyZiyUFZhpNOPs=\", false, function () {\n  return [useElevatorController];\n});\n_c = FloorControllerProvider;\nexport default FloorControllerProvider;\nvar _c;\n$RefreshReg$(_c, \"FloorControllerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useRef","useState","BUTTON_STATUS","TIMER","Floor","useElevatorController","jsxDEV","_jsxDEV","FloorControllerContext","useFloorController","_s","FloorControllerProvider","_ref","_s2","children","columns","rows","squareRef","floorsData","setFloorsData","createFloorsData","floorOnClickHandlerRef","ans","i","timesArr","Array","fill","STOP","push","key","index","buttonStatus","CALL","timeArr","handleClockAction","floorIndex","elevatorIndex","_ref2","onChange","action","styles","newStyles","setTime","timersArr","map","timer","prevData","floorData","newData","setButtonStatus","newStatus","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/context/floorController.jsx"],"sourcesContent":["import React, { createContext, useContext, useRef, useState } from 'react';\nimport { BUTTON_STATUS } from '../constants/constants';\nimport { TIMER } from '../constants/constants';\nimport Floor from '../components/Floor';\nimport { useElevatorController } from './elevatorController';\n\nconst FloorControllerContext = createContext();\n\nexport const useFloorController = () => {\n  return useContext(FloorControllerContext);\n};\n\n\nconst FloorControllerProvider = ({ children, columns, rows }) => {\n  const {squareRef} = useElevatorController()\n  const [floorsData, setFloorsData] = useState(createFloorsData())\n  const floorOnClickHandlerRef = useRef()\n\n  function createFloorsData() {\n    const ans = [];\n    for (let i = 0; i < rows; i++) {\n      const timesArr = new Array(columns).fill(TIMER.STOP); \n      ans.push({\n        key: `floor-${i}`,\n        index: rows - i - 1,\n        buttonStatus: BUTTON_STATUS.CALL,\n        timeArr: timesArr\n      });\n    }\n    return ans;\n  }\n\n\n  //change the clock status from running/stop/reset with the visibility\n  function handleClockAction(floorIndex, elevatorIndex, { onChange: action, styles: newStyles }){\n    //help function inside a function\n    function setTime(timersArr) {\n      return timersArr.map((timer, i) => {\n        if (i === elevatorIndex) {\n          return {\n            ...timer,\n            onChange: action,\n            styles: newStyles\n          };\n        } else {\n          return timer;\n        }\n      });\n    }\n\n  //set the flloor data to change the clocks\n  setFloorsData(prevData =>\n      prevData.map(floorData =>\n        {\n          const newData = floorData.index === floorIndex? {\n            ...floorData, \n            timeArr: setTime(floorData.timeArr)\n          }:floorData \n          if(floorData.index === floorIndex){\n          }\n          return newData\n        }\n      \n    ))\n  }\n\n  //set bottun color \n  function setButtonStatus(floorIndex, newStatus){\n    setFloorsData(prevData =>\n      prevData.map(floorData => floorData.index === floorIndex ? {...floorData, buttonStatus: newStatus} : floorData))\n    }\n\n\n\n\n  const value = {\n                  handleClockAction,\n                setButtonStatus,\n                floorsData}\n\n\n  return (\n    <FloorControllerContext.Provider value={value}>\n      {children}\n    </FloorControllerContext.Provider>\n  );\n};\n\nexport default FloorControllerProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}