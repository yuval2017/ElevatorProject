{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/-ElevatorProject/src/components/Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/boardStyles.css';\nimport MovingObject2 from './MovingObject2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = _ref => {\n  _s();\n  let {\n    rows,\n    columns\n  } = _ref;\n  const squareRef = useRef(null);\n  const [buttonColors, setButtonColors] = useState(Array(rows).fill('green'));\n  const [width, setWidth] = useState(0);\n  const [height, setHight] = useState(0);\n  const [elevatorsData, setElevatorsData] = useState([]);\n  //create elevatorsData\n  useEffect(() => {\n    if (width === 0) {\n      console.log(\"width\");\n      return;\n    }\n    const arr = [];\n    for (let i = 0; i < columns; i++) {\n      arr.push({\n        key: i,\n        y: 0,\n        style: {\n          backgroundColor: 'green',\n          width: `${width}px`,\n          left: `${i * (width - 2)}px`\n        },\n        onBoardArriveEvent: onBoardArriveEvent\n      });\n    }\n    setElevatorsData(arr);\n  }, []);\n  useEffect(() => {\n    console.log(\"get width\");\n    if (squareRef.current) {\n      const {\n        width,\n        height,\n        top,\n        left\n      } = squareRef.current.getBoundingClientRect();\n      setWidth(width);\n      setHight(height);\n      console.log(\"Width X:\", width, \"Height Y:\", height);\n    }\n  }, []);\n  function getElevator() {}\n  function handleElevetorArrived(elevatorId) {}\n  function handleElevatorReservation(rowNum, event) {\n    if (buttonColors[rowNum] !== 'green') {\n      console.log(\"here\");\n      return; // Do nothing if the button is red or waiting\n    }\n\n    console.log(event.target);\n    //set the new y value\n\n    setElevatorsData(prevData => prevData.map(data => data.key == 0 ? {\n      ...data,\n      y: -(height - 2) * rowNum\n    } : data));\n    setButtonColors(prevButtonColors => {\n      const newButtonColors = [...prevButtonColors];\n      newButtonColors[rowNum] = 'red';\n      return newButtonColors;\n    });\n    setTimeout(() => {\n      setButtonColors(prevButtonColors => {\n        const newButtonColors = [...prevButtonColors];\n        newButtonColors[rowNum] = 'blue';\n        return newButtonColors;\n      });\n      setTimeout(() => {\n        setButtonColors(prevButtonColors => {\n          const newButtonColors = [...prevButtonColors];\n          newButtonColors[rowNum] = 'green';\n          return newButtonColors;\n        });\n      }, 2000);\n    }, 5000);\n  }\n  function onBoardArriveEvent() {\n    console.log('board arrived');\n  }\n  const createBoard = () => {\n    const board = [];\n    for (let i = 0; i < rows; i++) {\n      const row = [];\n      for (let j = 0; j < columns; j++) {\n        row.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square p-2 bg-white\",\n          ref: i === 0 && j === 0 ? squareRef : null\n        }, `cell-${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this));\n      }\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-row align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-number me-2\",\n          children: `${rows - i - 1 == 0 ? \"Grownd Floor\" : rows - i - 1 === 1 ? \"1st\" : rows - i - 1 === 2 ? \"2nd\" : rows - i - 1 === 3 ? \"3nd\" : `${rows - i - 1}th`}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), row, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moving-object-wrapper\",\n          style: {\n            position: 'relative',\n            display: 'inline-block'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: `bottun${rows - i - 1}`,\n            disabled: false,\n            className: \"elevator-button-arrived\",\n            style: {\n              backgroundColor: buttonColors[rows - i - 1]\n            },\n            onClick: event => handleElevatorReservation(rows - i - 1, event),\n            children: \"Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, `row-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this));\n    }\n    return board;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [createBoard(), elevatorsData.map(data => /*#__PURE__*/_jsxDEV(MovingObject2, {\n      y: data.y,\n      style: {\n        backgroundColor: 'green',\n        width: `${width}px`,\n        left: `${data.key * (width - 2)}px`\n      },\n      onBoardArriveEvent: data.onBoardArriveEvent\n    }, data.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 10\n  }, this);\n};\n_s(Board, \"dkMyAk/Z9oiEiLHuut3QOlrySyo=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MovingObject2","jsxDEV","_jsxDEV","Board","_ref","_s","rows","columns","squareRef","buttonColors","setButtonColors","Array","fill","width","setWidth","height","setHight","elevatorsData","setElevatorsData","console","log","arr","i","push","key","y","style","backgroundColor","left","onBoardArriveEvent","current","top","getBoundingClientRect","getElevator","handleElevetorArrived","elevatorId","handleElevatorReservation","rowNum","event","target","prevData","map","data","prevButtonColors","newButtonColors","setTimeout","createBoard","board","row","j","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","children","position","display","type","id","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/-ElevatorProject/src/components/Board.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/boardStyles.css';\nimport MovingObject2 from './MovingObject2'\n\nconst Board = ({ rows, columns }) => {\n  const squareRef = useRef(null);\n  const [buttonColors, setButtonColors] = useState(Array(rows).fill('green'));\n  const [width, setWidth] = useState(0);\n  const [height, setHight] = useState(0);\n\n\nconst [elevatorsData, setElevatorsData] = useState([]) \n//create elevatorsData\nuseEffect(() => {\n  if(width===0){\n    console.log(\"width\")\n    return;\n  }\n  const arr = [];\n  for (let i = 0; i < columns; i++) {\n    arr.push({\n      key: i,\n      y: 0,\n      style: { backgroundColor: 'green', width: `${width}px`, left: `${i*(width-2)}px`},\n      onBoardArriveEvent: onBoardArriveEvent,\n    });\n  }\n  setElevatorsData(arr);\n}, []);\n\n\nuseEffect(() => {\n  console.log(\"get width\")\n  if (squareRef.current) {\n    const { width, height, top, left } = squareRef.current.getBoundingClientRect();\n    setWidth(width)\n    setHight(height)\n    console.log(\"Width X:\", width, \"Height Y:\", height);\n  }\n}, []);\n\nfunction getElevator(){\n\n}\nfunction handleElevetorArrived(elevatorId){\n  \n}\n\nfunction handleElevatorReservation(rowNum, event) {\n  if (buttonColors[rowNum] !== 'green') {\n    console.log(\"here\")\n    return; // Do nothing if the button is red or waiting\n  }\n  console.log(event.target)\n  //set the new y value\n    \n     setElevatorsData(prevData => (prevData.map(data =>\n      data.key == 0?{...data, y:-(height - 2)*rowNum}:data )))\n\n    setButtonColors((prevButtonColors) => {\n      const newButtonColors = [...prevButtonColors];\n      newButtonColors[rowNum] = 'red';\n      return newButtonColors;\n    });\n  \n    setTimeout(() => {\n      setButtonColors((prevButtonColors) => {\n        const newButtonColors = [...prevButtonColors];\n        newButtonColors[rowNum] = 'blue';\n        return newButtonColors;\n      });\n  \n      setTimeout(() => {\n        setButtonColors((prevButtonColors) => {\n          const newButtonColors = [...prevButtonColors];\n          newButtonColors[rowNum] = 'green';\n          return newButtonColors;\n        });\n      }, 2000);\n    }, 5000);\n  }\n\n  function onBoardArriveEvent(){\n    console.log('board arrived')\n  }\n  \n\n  const createBoard = () => {\n    const board = [];\n    for (let i = 0; i < rows; i++) {\n      const row = [];\n      for (let j = 0; j < columns; j++) {\n        row.push(\n          <div key={`cell-${i}-${j}`} className=\"square p-2 bg-white\" ref={i === 0 && j === 0 ? squareRef : null} />\n        );\n      }\n      board.push(\n        <div key={`row-${i}`} className=\"d-flex flex-row align-items-center\">\n          <div className=\"row-number me-2\">{`${rows-i-1==0?\"Grownd Floor\" : rows-i-1===1?\"1st\":rows-i-1===2?\"2nd\": rows-i-1===3?\"3nd\":`${rows-i-1}th`}`}</div>\n          {row}\n          <div className=\"moving-object-wrapper\" style={{ position: 'relative', display: 'inline-block' }}>\n           \n            <button type=\"button\"\n                id ={`bottun${rows-i-1}`}  \n                disabled={false} className=\"elevator-button-arrived\"  \n                style={{backgroundColor:buttonColors[rows-i-1] }} \n                onClick={(event)=>handleElevatorReservation(rows-i-1,event)} >Call</button>\n          </div>\n        </div>\n      );\n    }\n    return board;\n  };\n  \n\n\n  \n  return <div className=\"board\">\n    \n      {createBoard()}\n      {elevatorsData.map(data => (\n      <MovingObject2\n        key={data.key}\n        y={data.y}\n        style={{backgroundColor: 'green', width: `${width}px`, left: `${data.key*(width-2)}px`}}\n        onBoardArriveEvent={data.onBoardArriveEvent}\n      />\n    ))}\n      \n  </div>;\n  \n};\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}