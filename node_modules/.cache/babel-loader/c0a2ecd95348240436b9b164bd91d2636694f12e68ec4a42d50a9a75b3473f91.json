{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { easeInOutSine } from 'd3-ease';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Elevator(_ref) {\n  _s();\n  let {\n    y,\n    handleElevetorArrived\n  } = _ref;\n  const [currentY, setCurrentY] = useState(0);\n  useEffect(() => {\n    const duration = 6000; // duration of the animation in ms\n    const start = performance.now(); // current time\n\n    function animate(time) {\n      // calculate the progress of the animation (0 to 1)\n      const progress = (time - start) / duration;\n\n      // ease the progress with the desired easing function\n      const easedProgress = easeInOutSine(progress);\n\n      // calculate the current position based on the eased progress\n      const newPosition = y * easedProgress;\n\n      // update the current position state\n      setCurrentY(newPosition);\n\n      // if the animation is not yet finished, request another frame\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        handleElevetorArrived();\n      }\n    }\n\n    // start the animation\n    requestAnimationFrame(animate);\n  }, [y, handleElevetorArrived]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"elevator\",\n    style: {\n      transform: `translateY(${currentY}px)`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"elevator-image\",\n      src: \"./elevatorSvg/icons8-elevator.svg\",\n      alt: \"Woops\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Elevator, \"TeINyH3rb3GLIH9ZBXk9n461Kec=\");\n_c = Elevator;\nexport default Elevator;\nvar _c;\n$RefreshReg$(_c, \"Elevator\");","map":{"version":3,"names":["React","useEffect","useState","easeInOutSine","jsxDEV","_jsxDEV","Elevator","_ref","_s","y","handleElevetorArrived","currentY","setCurrentY","duration","start","performance","now","animate","time","progress","easedProgress","newPosition","requestAnimationFrame","className","style","transform","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { easeInOutSine } from 'd3-ease';\n\nfunction Elevator({ y, handleElevetorArrived }) {\n  const [currentY, setCurrentY] = useState(0);\n\n  useEffect(() => {\n    const duration = 6000; // duration of the animation in ms\n    const start = performance.now(); // current time\n\n    function animate(time) {\n      // calculate the progress of the animation (0 to 1)\n      const progress = (time - start) / duration;\n      \n      // ease the progress with the desired easing function\n      const easedProgress = easeInOutSine(progress);\n      \n      // calculate the current position based on the eased progress\n      const newPosition = y * easedProgress;\n      \n      // update the current position state\n      setCurrentY(newPosition);\n\n      // if the animation is not yet finished, request another frame\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        handleElevetorArrived();\n      }\n    }\n\n    // start the animation\n    requestAnimationFrame(animate);\n  }, [y, handleElevetorArrived]);\n\n  return (\n    <div\n      className=\"elevator\"\n      style={{ transform: `translateY(${currentY}px)` }}\n    >\n      <img\n        className=\"elevator-image\"\n        src=\"./elevatorSvg/icons8-elevator.svg\"\n        alt=\"Woops\"\n      />\n    </div>\n  );\n}\n\nexport default Elevator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAAC,IAAA,EAA+B;EAAAC,EAAA;EAAA,IAA9B;IAAEC,CAAC;IAAEC;EAAsB,CAAC,GAAAH,IAAA;EAC5C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAG,IAAI,CAAC,CAAC;IACvB,MAAMC,KAAK,GAAGC,WAAW,CAACC,GAAG,EAAE,CAAC,CAAC;;IAEjC,SAASC,OAAOA,CAACC,IAAI,EAAE;MACrB;MACA,MAAMC,QAAQ,GAAG,CAACD,IAAI,GAAGJ,KAAK,IAAID,QAAQ;;MAE1C;MACA,MAAMO,aAAa,GAAGjB,aAAa,CAACgB,QAAQ,CAAC;;MAE7C;MACA,MAAME,WAAW,GAAGZ,CAAC,GAAGW,aAAa;;MAErC;MACAR,WAAW,CAACS,WAAW,CAAC;;MAExB;MACA,IAAIF,QAAQ,GAAG,CAAC,EAAE;QAChBG,qBAAqB,CAACL,OAAO,CAAC;MAChC,CAAC,MAAM;QACLP,qBAAqB,EAAE;MACzB;IACF;;IAEA;IACAY,qBAAqB,CAACL,OAAO,CAAC;EAChC,CAAC,EAAE,CAACR,CAAC,EAAEC,qBAAqB,CAAC,CAAC;EAE9B,oBACEL,OAAA;IACEkB,SAAS,EAAC,UAAU;IACpBC,KAAK,EAAE;MAAEC,SAAS,EAAG,cAAad,QAAS;IAAK,CAAE;IAAAe,QAAA,eAElDrB,OAAA;MACEkB,SAAS,EAAC,gBAAgB;MAC1BI,GAAG,EAAC,mCAAmC;MACvCC,GAAG,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACxB,EAAA,CA5CQF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA8CjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}