{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator.jsx\",\n  _s = $RefreshSig$();\nimport { animated, useSpring } from 'react-spring';\nimport '../styles/elevatorStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Elevator = _ref => {\n  _s();\n  let {\n    y,\n    style,\n    handleElevetorArrived,\n    color\n  } = _ref;\n  const spring = useSpring({\n    from: {\n      y: 0\n    },\n    to: {\n      y\n    },\n    config: {\n      tension: 200,\n      friction: 25,\n      mass: 1,\n      clamp: true\n    },\n    onRest: handleElevetorArrived,\n    onStart: () => console.log('started'),\n    onFrame: props => {\n      if (props.y > y / 2) {\n        props.tension = 120;\n        props.friction = 14;\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    className: \"elevator\",\n    style: {\n      ...style,\n      transform: spring.y.to(y => `translateY(${y}px)`)\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"elevator-image\",\n      src: `./icons8-elevator-${color}.svg`,\n      alt: \"Woops\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Elevator, \"xrfx8rkkJgEmgq4ddSaV8nbWakk=\", false, function () {\n  return [useSpring];\n});\n_c = Elevator;\nexport default Elevator;\nvar _c;\n$RefreshReg$(_c, \"Elevator\");","map":{"version":3,"names":["animated","useSpring","jsxDEV","_jsxDEV","Elevator","_ref","_s","y","style","handleElevetorArrived","color","spring","from","to","config","tension","friction","mass","clamp","onRest","onStart","console","log","onFrame","props","div","className","transform","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator.jsx"],"sourcesContent":["import { animated, useSpring } from 'react-spring';\nimport '../styles/elevatorStyles.css'\n\nconst Elevator = ({ y , style, handleElevetorArrived, color}) => {\n  const spring = useSpring({\n    from: { y: 0 },\n    to: { y },\n    config: {\n      tension: 200,\n      friction: 25,\n      mass: 1,\n      clamp: true,\n    },\n    onRest: handleElevetorArrived,\n    onStart: () => console.log('started'),\n    onFrame: props => {\n      if (props.y > y / 2) {\n        props.tension = 120;\n        props.friction = 14;\n      }\n    },\n  });\n  \n  return (\n    <animated.div\n      className=\"elevator\"\n      style={{\n        ...style,\n        transform: spring.y.to(y => `translateY(${y}px)`),\n      }}\n    >\n      <img className=\"elevator-image\" src={`./icons8-elevator-${color}.svg`} alt=\"Woops\" />\n    </animated.div>\n  );\n};\n\nexport default Elevator;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,cAAc;AAClD,OAAO,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,QAAQ,GAAGC,IAAA,IAAgD;EAAAC,EAAA;EAAA,IAA/C;IAAEC,CAAC;IAAGC,KAAK;IAAEC,qBAAqB;IAAEC;EAAK,CAAC,GAAAL,IAAA;EAC1D,MAAMM,MAAM,GAAGV,SAAS,CAAC;IACvBW,IAAI,EAAE;MAAEL,CAAC,EAAE;IAAE,CAAC;IACdM,EAAE,EAAE;MAAEN;IAAE,CAAC;IACTO,MAAM,EAAE;MACNC,OAAO,EAAE,GAAG;MACZC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE;IACT,CAAC;IACDC,MAAM,EAAEV,qBAAqB;IAC7BW,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACrCC,OAAO,EAAEC,KAAK,IAAI;MAChB,IAAIA,KAAK,CAACjB,CAAC,GAAGA,CAAC,GAAG,CAAC,EAAE;QACnBiB,KAAK,CAACT,OAAO,GAAG,GAAG;QACnBS,KAAK,CAACR,QAAQ,GAAG,EAAE;MACrB;IACF;EACF,CAAC,CAAC;EAEF,oBACEb,OAAA,CAACH,QAAQ,CAACyB,GAAG;IACXC,SAAS,EAAC,UAAU;IACpBlB,KAAK,EAAE;MACL,GAAGA,KAAK;MACRmB,SAAS,EAAEhB,MAAM,CAACJ,CAAC,CAACM,EAAE,CAACN,CAAC,IAAK,cAAaA,CAAE,KAAI;IAClD,CAAE;IAAAqB,QAAA,eAEFzB,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAACG,GAAG,EAAG,qBAAoBnB,KAAM,MAAM;MAACoB,GAAG,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxE;AAEnB,CAAC;AAAC5B,EAAA,CA/BIF,QAAQ;EAAA,QACGH,SAAS;AAAA;AAAAkC,EAAA,GADpB/B,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}