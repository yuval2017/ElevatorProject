{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/CountTimer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../styles/timerStyles.css';\nimport { TIMER } from '../constants/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountDownTimer = _ref => {\n  _s();\n  let {\n    onChange,\n    styles\n  } = _ref;\n  const [time, setTime] = useState(0);\n  const intervalRef = useRef();\n  useEffect(() => {\n    if (onChange === TIMER.START) {\n      handleStart();\n    } else if (onChange === TIMER.STOP) {\n      handleStop();\n    } else if (onChange === TIMER.RESET) {\n      handleReset();\n    }\n  }, [onChange]);\n  const handleStart = () => {\n    intervalRef.current = setInterval(() => {\n      setTime(prevTime => prevTime + 10);\n    }, 10);\n  };\n  const handleStop = () => {\n    clearInterval(intervalRef.current);\n  };\n  const handleReset = () => {\n    clearInterval(intervalRef.current);\n    setTime(0);\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 1000 / 60 % 60);\n    const seconds = Math.floor(time / 1000 % 60);\n    const formattedMinutes = minutes.toString();\n    const formattedSeconds = seconds.toString();\n    return `${formattedMinutes} min. ${formattedSeconds} sec.`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    style: styles,\n    children: formatTime(time)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n_s(CountDownTimer, \"QYUtB+o4Jw6FEFBNV8D+KmHR5Ks=\");\n_c = CountDownTimer;\nexport default CountDownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountDownTimer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TIMER","jsxDEV","_jsxDEV","CountDownTimer","_ref","_s","onChange","styles","time","setTime","intervalRef","START","handleStart","STOP","handleStop","RESET","handleReset","current","setInterval","prevTime","clearInterval","formatTime","minutes","Math","floor","seconds","formattedMinutes","toString","formattedSeconds","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/CountTimer.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport '../styles/timerStyles.css'\nimport { TIMER } from '../constants/constants';\n\n\nconst CountDownTimer = ({onChange, styles}) => {\n  const [time, setTime] = useState(0);\n  const intervalRef = useRef();\n\n\n  useEffect(() => {\n    if(onChange === TIMER.START){\n      handleStart()\n    }\n    else if(onChange === TIMER.STOP){\n      handleStop()\n    }\n    else if(onChange === TIMER.RESET){\n      handleReset()\n    }\n  }, [onChange]);\n\n  const handleStart = () => {\n    intervalRef.current = setInterval(() => {\n      setTime((prevTime) => prevTime + 10);\n    }, 10);\n  };\n\n  const handleStop = () => {\n    clearInterval(intervalRef.current);\n  };\n\n\n  const handleReset = () => {\n    clearInterval(intervalRef.current);\n    setTime(0);\n  };\n\n  const formatTime = (time) => {\n    const minutes = Math.floor((time / 1000 / 60) % 60);\n    const seconds = Math.floor((time / 1000) % 60);\n\n    const formattedMinutes = minutes.toString();\n    const formattedSeconds = seconds.toString();\n\n    return `${formattedMinutes} min. ${formattedSeconds} sec.`;\n  };\n\n  return (\n  <div className=\"timer\" style={styles}>\n    {formatTime(time)}\n  </div>\n  );\n};\n\nexport default CountDownTimer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,2BAA2B;AAClC,SAASC,KAAK,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,cAAc,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAACC,QAAQ;IAAEC;EAAM,CAAC,GAAAH,IAAA;EACxC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMa,WAAW,GAAGZ,MAAM,EAAE;EAG5BC,SAAS,CAAC,MAAM;IACd,IAAGO,QAAQ,KAAKN,KAAK,CAACW,KAAK,EAAC;MAC1BC,WAAW,EAAE;IACf,CAAC,MACI,IAAGN,QAAQ,KAAKN,KAAK,CAACa,IAAI,EAAC;MAC9BC,UAAU,EAAE;IACd,CAAC,MACI,IAAGR,QAAQ,KAAKN,KAAK,CAACe,KAAK,EAAC;MAC/BC,WAAW,EAAE;IACf;EACF,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBF,WAAW,CAACO,OAAO,GAAGC,WAAW,CAAC,MAAM;MACtCT,OAAO,CAAEU,QAAQ,IAAKA,QAAQ,GAAG,EAAE,CAAC;IACtC,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;EAED,MAAML,UAAU,GAAGA,CAAA,KAAM;IACvBM,aAAa,CAACV,WAAW,CAACO,OAAO,CAAC;EACpC,CAAC;EAGD,MAAMD,WAAW,GAAGA,CAAA,KAAM;IACxBI,aAAa,CAACV,WAAW,CAACO,OAAO,CAAC;IAClCR,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMY,UAAU,GAAIb,IAAI,IAAK;IAC3B,MAAMc,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAEhB,IAAI,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;IACnD,MAAMiB,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEhB,IAAI,GAAG,IAAI,GAAI,EAAE,CAAC;IAE9C,MAAMkB,gBAAgB,GAAGJ,OAAO,CAACK,QAAQ,EAAE;IAC3C,MAAMC,gBAAgB,GAAGH,OAAO,CAACE,QAAQ,EAAE;IAE3C,OAAQ,GAAED,gBAAiB,SAAQE,gBAAiB,OAAM;EAC5D,CAAC;EAED,oBACA1B,OAAA;IAAK2B,SAAS,EAAC,OAAO;IAACC,KAAK,EAAEvB,MAAO;IAAAwB,QAAA,EAClCV,UAAU,CAACb,IAAI;EAAC;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACb;AAER,CAAC;AAAC9B,EAAA,CAhDIF,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAkDpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}