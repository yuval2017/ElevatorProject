{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator2.jsx\",\n  _s = $RefreshSig$();\nimport { useSpring, animated } from 'react-spring';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Elevator2(_ref) {\n  _s();\n  let {\n    initialY\n  } = _ref;\n  const [springProps, setSpringProps] = useSpring(() => ({\n    y: initialY\n  }));\n  const handleMoveToY = newY => {\n    // Calculate the distance between the current y value and the new y value\n    const distance = newY - springProps.y.getValue();\n\n    // Calculate the velocity needed to reach the new y value in 1 second\n    const velocity = distance / 1000;\n\n    // Update the animated spring with the new y value and velocity\n    setSpringProps({\n      y: newY,\n      velocity: {\n        y: velocity\n      },\n      config: {\n        mass: 1,\n        tension: 180,\n        friction: 12\n      },\n      onRest: () => {\n        console.log('Object reached the point!');\n      }\n    });\n  };\n  useEffect(() => {\n    handleMoveToY(initialY);\n  }, [initialY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: e => handleMoveToY(e.clientY),\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      style: {\n        width: '50px',\n        height: '50px',\n        backgroundColor: 'red',\n        position: 'absolute',\n        bottom: 0,\n        transform: springProps.y.interpolate(y => `translate3d(0, ${Math.min(y, 200)}px, 0)` // Cap the y value at 200\n        )\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Elevator2, \"eb2bJUR/5JUtCHMA0CQBV4NnmQM=\", false, function () {\n  return [useSpring];\n});\n_c = Elevator2;\nvar _c;\n$RefreshReg$(_c, \"Elevator2\");","map":{"version":3,"names":["useSpring","animated","useEffect","jsxDEV","_jsxDEV","Elevator2","_ref","_s","initialY","springProps","setSpringProps","y","handleMoveToY","newY","distance","getValue","velocity","config","mass","tension","friction","onRest","console","log","onClick","e","clientY","children","div","style","width","height","backgroundColor","position","bottom","transform","interpolate","Math","min","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywblhytr/Desktop/Elavator/ElevetorProject/src/components/Elevator2.jsx"],"sourcesContent":["import { useSpring, animated } from 'react-spring';\nimport { useEffect } from 'react';\n\nexport function Elevator2({ initialY }) {\n  const [springProps, setSpringProps] = useSpring(() => ({ y: initialY }));\n\n  const handleMoveToY = (newY) => {\n    // Calculate the distance between the current y value and the new y value\n    const distance = newY - springProps.y.getValue();\n\n    // Calculate the velocity needed to reach the new y value in 1 second\n    const velocity = distance / 1000;\n\n    // Update the animated spring with the new y value and velocity\n    setSpringProps({\n      y: newY,\n      velocity: { y: velocity },\n      config: { mass: 1, tension: 180, friction: 12 },\n      onRest: () => {\n        console.log('Object reached the point!');\n      },\n    });\n  };\n\n  useEffect(() => {\n    handleMoveToY(initialY);\n  }, [initialY]);\n\n  return (\n    <div onClick={(e) => handleMoveToY(e.clientY)}>\n      <animated.div\n        style={{\n          width: '50px',\n          height: '50px',\n          backgroundColor: 'red',\n          position: 'absolute',\n          bottom: 0,\n          transform: springProps.y.interpolate(\n            (y) =>\n              `translate3d(0, ${Math.min(y, 200)}px, 0)` // Cap the y value at 200\n          ),\n        }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,cAAc;AAClD,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,SAASC,SAASA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACpC,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGV,SAAS,CAAC,OAAO;IAAEW,CAAC,EAAEH;EAAS,CAAC,CAAC,CAAC;EAExE,MAAMI,aAAa,GAAIC,IAAI,IAAK;IAC9B;IACA,MAAMC,QAAQ,GAAGD,IAAI,GAAGJ,WAAW,CAACE,CAAC,CAACI,QAAQ,EAAE;;IAEhD;IACA,MAAMC,QAAQ,GAAGF,QAAQ,GAAG,IAAI;;IAEhC;IACAJ,cAAc,CAAC;MACbC,CAAC,EAAEE,IAAI;MACPG,QAAQ,EAAE;QAAEL,CAAC,EAAEK;MAAS,CAAC;MACzBC,MAAM,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,OAAO,EAAE,GAAG;QAAEC,QAAQ,EAAE;MAAG,CAAC;MAC/CC,MAAM,EAAEA,CAAA,KAAM;QACZC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC1C;IACF,CAAC,CAAC;EACJ,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACdU,aAAa,CAACJ,QAAQ,CAAC;EACzB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEJ,OAAA;IAAKoB,OAAO,EAAGC,CAAC,IAAKb,aAAa,CAACa,CAAC,CAACC,OAAO,CAAE;IAAAC,QAAA,eAC5CvB,OAAA,CAACH,QAAQ,CAAC2B,GAAG;MACXC,KAAK,EAAE;QACLC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAE,KAAK;QACtBC,QAAQ,EAAE,UAAU;QACpBC,MAAM,EAAE,CAAC;QACTC,SAAS,EAAE1B,WAAW,CAACE,CAAC,CAACyB,WAAW,CACjCzB,CAAC,IACC,kBAAiB0B,IAAI,CAACC,GAAG,CAAC3B,CAAC,EAAE,GAAG,CAAE,QAAO,CAAC;QAAA;MAEjD;IAAE;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACnC,EAAA,CA1CeF,SAAS;EAAA,QACeL,SAAS;AAAA;AAAA2C,EAAA,GADjCtC,SAAS;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}